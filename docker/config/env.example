# OpenCVE docker-compose vars
COMPOSE_PROJECT_NAME=opencve
OPENCVE_REPOSITORY=https://github.com/opencve/opencve.git
OPENCVE_VERSION=dev/ncrocfer/v2
OPENCVE_PORT=80

POSTGRES_USER=opencve
POSTGRES_PASSWORD=opencve
POSTGRES_VERSION=15

# Airflow docker-compose vars
AIRFLOW_DIR=/home/airflow
AIRFLOW_DAGS_DIR=../scheduler/dags/
AIRFLOW_WEBSERVER_PORT=8080
_AIRFLOW_WWW_USER_USERNAME=airflow
_AIRFLOW_WWW_USER_PASSWORD=airflow

# Airflow configuration vars
AIRFLOW__CORE__EXECUTOR=CeleryExecutor
AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://opencve:opencve@postgres:5432/opencve
AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://opencve:opencve@postgres:5432/opencve
AIRFLOW__CELERY__BROKER_URL=redis://:@redis/1
AIRFLOW__CORE__FERNET_KEY='ywvTuNQw6bW-UlEyS0ykTqiz9on1cyMlHT7e1Ddo060='
AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION='true'
AIRFLOW__CORE__LOAD_EXAMPLES='false'
AIRFLOW__CORE__LOGGING_LEVEL=INFO
AIRFLOW__API__AUTH_BACKENDS='airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK='true'

# SQLALCHEMY
SQLALCHEMY_SILENCE_UBER_WARNING=1
