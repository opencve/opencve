from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-8mjeblz2*z@_n&zn^xpo)(id8f90%@elj#t5dg)59hd69(553a"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.humanize",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.postgres",
    "django_extensions",
    "allauth",
    "allauth.account",
    "crispy_forms",
    "crispy_bootstrap3",
    "debug_toolbar",
    "hijack",
    "hijack.contrib.admin",
    "rest_framework",
    "changes",
    "cves",
    "organizations",
    "projects",
    "users",
]

MIDDLEWARE = [
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allauth.account.middleware.AccountMiddleware",
    "hijack.middleware.HijackUserMiddleware",
    "organizations.middlewares.OrganizationMiddleware",
]

ROOT_URLCONF = "opencve.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "opencve.wsgi.application"

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "opencve",
        "USER": "opencve",
        "PASSWORD": "opencve",
        "HOST": "postgres",
        "PORT": "5432"
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Password hashers
# https://docs.djangoproject.com/en/4.0/ref/settings/#password-hashers

PASSWORD_HASHERS = [
    "django.contrib.auth.hashers.Argon2PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2PasswordHasher",
    "django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher",
    "django.contrib.auth.hashers.BCryptSHA256PasswordHasher",
    "django.contrib.auth.hashers.ScryptPasswordHasher",
    "django.contrib.auth.hashers.BCryptPasswordHasher",
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = "/app/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Template used by Django-Crispy
CRISPY_TEMPLATE_PACK = "bootstrap3"

# Redirection page for authentication
LOGIN_REDIRECT_URL = "home"
LOGOUT_REDIRECT_URL = "cves"
LOGIN_URL = "account_login"

# User settings
AUTH_USER_MODEL = "users.User"
ACCOUNT_CHANGE_EMAIL = True
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"
ACCOUNT_EMAIL_SUBJECT_PREFIX = "[OpenCVE] "
ACCOUNT_LOGOUT_REDIRECT_URL = "account_login"
ACCOUNT_FORMS = {
    "login": "users.forms.LoginForm",
    "signup": "users.forms.RegisterForm",
    "reset_password": "users.forms.PasswordResetForm",
    "reset_password_from_key": "users.forms.SetPasswordForm",
}

# Email backend
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

# Internal IPs
INTERNAL_IPS = ["127.0.0.1"]

REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated"
    ],
    "DEFAULT_RENDERER_CLASSES": ["rest_framework.renderers.JSONRenderer"],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
}

# Number of days to keep the activation link active
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 7

# The default protocol used for when generating accounts URLs
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "http"

# Number of vendors and products to display the CVE listing
COUNT_EXCERPT = 3

# The local folder where the repository `opencve-kb` is cloned
KB_REPO_PATH = "/app/repositories/opencve-kb"

# The local folder where the repository `cvelistV5` is cloned
MITRE_REPO_PATH = "/app/repositories/cvelistV5"

# The local folder where the repository `opencve-nvd` is cloned
NVD_REPO_PATH = "/app/repositories/opencve-nvd"

# OpenCVE v1 database URI, used to migrate data from v1 to v2
OPENCVE_V1_DATABASE_URI = "postgresql://user:secret@localhost:5432/dbname"
