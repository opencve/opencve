---
version: "3.8"
services:

  opencve: &opencve_base
    image: opencve/opencve:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        TINI_VERSION: ${TINI_VERSION}
    environment:
      OPENCVE_HOME: /opt
      OPENCVE_CONFIG: /opt/opencve/opencve.cfg
    volumes:
    - ./shared/config/docker-opencve.cfg:/opt/opencve/opencve.cfg
    networks:
    - internal
    - web

  server:
    <<: *opencve_base
    container_name: ${NAMESPACE}-server
    ports:
    - 8000:8000
    depends_on:
    - celery-worker
    - celery-beat
    - postgres
    - redis
    networks:
    - internal
    - web
    command: -b 0.0.0.0:8000
    # restart: unless-stopped

  celery-worker:
    <<: *opencve_base
    container_name: ${NAMESPACE}-worker
    networks:
    - internal
    command: ["worker"]
    # restart: unless-stopped

  celery-beat:
    <<: *opencve_base
    container_name: ${NAMESPACE}-beat
    networks:
    - internal
    command: ["beat"]
    # restart: unless-stopped  

  postgres:
    image: postgres:${POSTGRES_VERSION}-alpine
    container_name: ${NAMESPACE}-postgres
    ports:
    - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    expose:
    - ${POSTGRES_PORT}
    networks:
    - internal
    environment:
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_DB=${POSTGRES_DB}
    volumes:
    - postgres-data:/var/lib/postgresql/data/
    restart: unless-stopped

  redis:
    image: redis:${REDIS_VERSION}-alpine
    container_name: ${NAMESPACE}-redis
    hostname: redis
    networks:
    - internal    
    command:
    - "redis-server"
    - "--maxmemory ${REDIS_MEMORY_MAX}"
    - "--maxmemory-policy allkeys-lru"
    restart: unless-stopped

networks:
  internal:
    driver: bridge
  web:
    external: true

volumes:
  # PostreSQL
  postgres-data: